# Apache Configuration for UDRG Membership System on cPanel/WHM VPS
# This file contains configuration snippets for Apache web server

# ========================================
# 1. .htaccess file for public_html directory
# Place this in /home/username/public_html/.htaccess
# ========================================

RewriteEngine On

# Force HTTPS redirect
RewriteCond %{HTTPS} off
RewriteRule ^(.*)$ https://%{HTTP_HOST}%{REQUEST_URI} [L,R=301]

# Security headers
Header always set X-Frame-Options "SAMEORIGIN"
Header always set X-XSS-Protection "1; mode=block"
Header always set X-Content-Type-Options "nosniff"
Header always set Referrer-Policy "strict-origin-when-cross-origin"
Header always set Strict-Transport-Security "max-age=31536000; includeSubDomains"

# Hide server information
ServerTokens Prod
Header unset Server

# Gzip compression
<IfModule mod_deflate.c>
    AddOutputFilterByType DEFLATE text/plain
    AddOutputFilterByType DEFLATE text/html
    AddOutputFilterByType DEFLATE text/xml
    AddOutputFilterByType DEFLATE text/css
    AddOutputFilterByType DEFLATE application/xml
    AddOutputFilterByType DEFLATE application/xhtml+xml
    AddOutputFilterByType DEFLATE application/rss+xml
    AddOutputFilterByType DEFLATE application/javascript
    AddOutputFilterByType DEFLATE application/x-javascript
    AddOutputFilterByType DEFLATE application/json
</IfModule>

# Cache static assets
<IfModule mod_expires.c>
    ExpiresActive On
    ExpiresByType image/jpg "access plus 1 month"
    ExpiresByType image/jpeg "access plus 1 month"
    ExpiresByType image/gif "access plus 1 month"
    ExpiresByType image/png "access plus 1 month"
    ExpiresByType text/css "access plus 1 month"
    ExpiresByType application/pdf "access plus 1 month"
    ExpiresByType text/javascript "access plus 1 month"
    ExpiresByType application/javascript "access plus 1 month"
    ExpiresByType application/x-javascript "access plus 1 month"
    ExpiresByType application/x-shockwave-flash "access plus 1 month"
    ExpiresByType image/x-icon "access plus 1 year"
    ExpiresDefault "access plus 2 days"
</IfModule>

# Proxy to Node.js application
RewriteCond %{REQUEST_FILENAME} !-f
RewriteCond %{REQUEST_FILENAME} !-d
RewriteCond %{REQUEST_URI} !^/uploads/
RewriteRule ^(.*)$ http://localhost:3000/$1 [P,L]

# Direct serve uploads directory (if not proxying)
<Directory "/home/username/public_html/app/uploads">
    Options -Indexes
    AllowOverride None
    Require all granted
    
    # Additional security for uploads
    <FilesMatch "\.(php|phtml|php3|php4|php5|pl|py|jsp|asp|sh|cgi)$">
        Require all denied
    </FilesMatch>
</Directory>

# ========================================
# 2. Virtual Host Configuration for WHM
# Add this to your domain's virtual host configuration
# ========================================

<VirtualHost *:80>
    ServerName your-domain.com
    ServerAlias www.your-domain.com
    DocumentRoot /home/username/public_html
    
    # Redirect all HTTP to HTTPS
    RewriteEngine On
    RewriteCond %{HTTPS} off
    RewriteRule ^(.*)$ https://%{HTTP_HOST}%{REQUEST_URI} [L,R=301]
</VirtualHost>

<VirtualHost *:443>
    ServerName your-domain.com
    ServerAlias www.your-domain.com
    DocumentRoot /home/username/public_html
    
    # SSL Configuration
    SSLEngine on
    SSLCertificateFile /etc/ssl/certs/your-domain.com.crt
    SSLCertificateKeyFile /etc/ssl/private/your-domain.com.key
    SSLCertificateChainFile /etc/ssl/certs/your-domain-chain.crt
    
    # Security headers
    Header always set X-Frame-Options "SAMEORIGIN"
    Header always set X-XSS-Protection "1; mode=block"
    Header always set X-Content-Type-Options "nosniff"
    Header always set Strict-Transport-Security "max-age=31536000; includeSubDomains"
    
    # Logs
    ErrorLog /home/username/logs/error.log
    CustomLog /home/username/logs/access.log combined
    
    # Static files (uploads)
    Alias /uploads /home/username/public_html/app/uploads
    <Directory "/home/username/public_html/app/uploads">
        Options -Indexes
        AllowOverride None
        Require all granted
        
        # Security for uploads
        <FilesMatch "\.(php|phtml|php3|php4|php5|pl|py|jsp|asp|sh|cgi)$">
            Require all denied
        </FilesMatch>
    </Directory>
    
    # Proxy to Node.js application
    ProxyPreserveHost On
    ProxyRequests Off
    
    # Health check
    ProxyPass /api/health http://localhost:3000/api/health
    ProxyPassReverse /api/health http://localhost:3000/api/health
    
    # Main application
    ProxyPass / http://localhost:3000/
    ProxyPassReverse / http://localhost:3000/
    
    # WebSocket support (if needed)
    RewriteEngine On
    RewriteCond %{HTTP:Upgrade} websocket [NC]
    RewriteCond %{HTTP:Connection} upgrade [NC]
    RewriteRule ^/?(.*) "ws://localhost:3000/$1" [P,L]
</VirtualHost>

# ========================================
# 3. cPanel Subdomain Configuration
# If using a subdomain like app.your-domain.com
# ========================================

<VirtualHost *:443>
    ServerName app.your-domain.com
    DocumentRoot /home/username/public_html/app
    
    # SSL Configuration
    SSLEngine on
    SSLCertificateFile /etc/ssl/certs/app.your-domain.com.crt
    SSLCertificateKeyFile /etc/ssl/private/app.your-domain.com.key
    
    # Security headers
    Header always set X-Frame-Options "SAMEORIGIN"
    Header always set X-XSS-Protection "1; mode=block"
    Header always set X-Content-Type-Options "nosniff"
    
    # Proxy everything to Node.js
    ProxyPreserveHost On
    ProxyRequests Off
    ProxyPass / http://localhost:3000/
    ProxyPassReverse / http://localhost:3000/
</VirtualHost>

# ========================================
# 4. Apache Modules Required
# Ensure these modules are enabled in Apache
# ========================================

# mod_rewrite - for URL rewriting
# mod_proxy - for proxying to Node.js
# mod_proxy_http - for HTTP proxy
# mod_ssl - for SSL/TLS
# mod_headers - for security headers
# mod_deflate - for compression
# mod_expires - for caching

# To enable modules (if you have Apache access):
# a2enmod rewrite
# a2enmod proxy
# a2enmod proxy_http
# a2enmod ssl
# a2enmod headers
# a2enmod deflate
# a2enmod expires

# ========================================
# 5. Error Pages (Optional)
# Create custom error pages
# ========================================

ErrorDocument 404 /404.html
ErrorDocument 500 /500.html
ErrorDocument 502 /502.html
ErrorDocument 503 /503.html

# ========================================
# 6. Log Configuration
# ========================================

# Make sure log directory exists
# mkdir -p /home/username/logs

# Log formats
LogFormat "%h %l %u %t \"%r\" %>s %O \"%{Referer}i\" \"%{User-Agent}i\"" combined
LogFormat "%h %l %u %t \"%r\" %>s %O" common

# ========================================
# 7. Security Configuration
# ========================================

# Disable server signature
ServerSignature Off

# Hide Apache version
ServerTokens Prod

# Disable unused HTTP methods
<Location "/">
    <LimitExcept GET POST PUT DELETE OPTIONS>
        Require all denied
    </LimitExcept>
</Location>

# Prevent access to sensitive files
<FilesMatch "\.(env|log|config|ini|sql|bak|backup)$">
    Require all denied
</FilesMatch>

# Prevent access to node_modules
<DirectoryMatch "node_modules">
    Require all denied
</DirectoryMatch>

# Prevent access to .git directory
<DirectoryMatch "\.git">
    Require all denied
</DirectoryMatch>

# ========================================
# INSTALLATION INSTRUCTIONS:
# ========================================

# 1. Place the .htaccess configuration in your public_html directory
# 2. Update the virtual host configuration in WHM or ask your hosting provider
# 3. Replace "username" and "your-domain.com" with actual values
# 4. Ensure SSL certificates are properly installed
# 5. Test the configuration: sudo apache2ctl configtest
# 6. Restart Apache: sudo systemctl restart apache2

# ========================================
# TROUBLESHOOTING:
# ========================================

# Check Apache error logs:
# tail -f /var/log/apache2/error.log

# Check your domain's error logs:
# tail -f /home/username/logs/error.log

# Test proxy connection:
# curl -I http://localhost:3000/api/health

# Verify SSL:
# openssl s_client -connect your-domain.com:443