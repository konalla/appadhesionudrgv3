# Docker Compose for UDRG Membership System
# Use for local development or containerized deployment

version: '3.8'

services:
  # PostgreSQL Database
  database:
    image: postgres:15
    environment:
      POSTGRES_DB: udrg_database
      POSTGRES_USER: udrg_user
      POSTGRES_PASSWORD: secure_password_change_me
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database_export.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U udrg_user -d udrg_database"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Application Server
  app:
    build: .
    environment:
      NODE_ENV: production
      PORT: 5000
      DATABASE_URL: postgres://udrg_user:secure_password_change_me@database:5432/udrg_database
      SESSION_SECRET: your_super_secure_session_secret_key_here
      UPLOAD_DIR: uploads
    volumes:
      - ./uploads:/app/uploads
      - app_logs:/app/logs
    ports:
      - "5000:5000"
    depends_on:
      database:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - app
    restart: unless-stopped

volumes:
  postgres_data:
  app_logs: